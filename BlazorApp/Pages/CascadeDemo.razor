@page "/cascadedemo"

@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime

<h3>CascadeDemo</h3>

<EditForm Model="@cascade">
    <select @onchange="HandleFirstDropDownChange">
        <option value="">Select Media Type...</option>
        @foreach (var m in mediaTypes)
        {
            <option value="@m.Key">@m.Value</option>
        }
    </select>
    @if (subTypes.Count > 0)
    {
        <select id="secondDropDown" @onchange="HandleSecondDropDownChange">
            <option value="">Select Sub Type...</option>
            @foreach (var s in subTypes)
            {
                <option value="@s.Key">@s.Value</option>
            }
        </select>
    }
</EditForm>

@code {
    private CascadeModel cascade = new CascadeModel();
    private Dictionary<int, string> mediaTypes = new Dictionary<int, string>();
    private Dictionary<int, string> subTypes = new Dictionary<int, string>();

    public CascadeDemo()
    {
        mediaTypes.Add(1, "Movies");
        mediaTypes.Add(2, "TV Shows");
        mediaTypes.Add(3, "Books");
    }

    private void HandleSecondDropDownChange(ChangeEventArgs e)
    {
        if (string.IsNullOrWhiteSpace(e.Value.ToString()))
        {
            return;
        }
        cascade.SecondId= int.Parse(e.Value.ToString());
    }

    private async Task HandleFirstDropDownChange(ChangeEventArgs e)
    {

        cascade.SecondId = 0;
        subTypes = new Dictionary<int, string>();

        if (string.IsNullOrWhiteSpace(e.Value.ToString()))
        {
            cascade.FirstId = 0;
            cascade.SecondId = 0;
            subTypes = new Dictionary<int, string>();
            return;
        }
        cascade.FirstId = int.Parse(e.Value.ToString());

        switch (cascade.FirstId)
        {
            case 1:
                subTypes = new Dictionary<int, string>();
                subTypes.Add(1, "Top Gun");
                subTypes.Add(2, "Die Hard");
                subTypes.Add(3, "Star Wars");
                break;
            case 2:
                subTypes = new Dictionary<int, string>();
                subTypes.Add(4, "House");
                subTypes.Add(5, "ER");
                subTypes.Add(6, "Emergency");
                break;
            case 3:
                subTypes = new Dictionary<int, string>();
                subTypes.Add(7, "Wizard of Earthsea");
                subTypes.Add(8, "Ender's Game");
                subTypes.Add(9, "The Hunt For Red October");
                break;
            default:
                subTypes = new Dictionary<int, string>();
                break;
        }
        await JSRuntime.InvokeAsync<object>("ResetSecondDropDown", new object[0]);
    }

}
